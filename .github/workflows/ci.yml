name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build app1
        run: npx nx build app1 --prod && npx nx build app1 --prod --app="server"

      - name: Build app2
        run: npx nx build app2 --prod

      - name: Dockerize app1
        run: |
          docker build -t my-angular-project-app1:latest -f Dockerfile.app1 .
          docker tag my-angular-project-app1:latest mydockerhubusername/my-angular-project-app1:latest
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push mydockerhubusername/my-angular-project-app1:latest

      - name: Dockerize app2
        run: |
          docker build -t my-angular-project-app2:latest -f Dockerfile.app2 .
          docker tag my-angular-project-app2:latest mydockerhubusername/my-angular-project-app2:latest
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push mydockerhubusername/my-angular-project-app2:latest
